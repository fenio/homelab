---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app kyoo
spec:
  interval: 15m
  timeout: 15m
  chart:
    spec:
      chart: app-template
      version: 3.7.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      meilisearch:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/getmeili/meilisearch
              tag: v1.12
            env:
              MEILI_ENV: production
              MEILI_MASTER_KEY:
                valueFrom:
                  secretKeyRef:
                    name: kyoo-secret
                    key: MEILI_MASTER_KEY
            probes:
              liveness: &searchprobes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &searchport 7700
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *searchprobes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              requests:
                cpu: 5m
              limits:
                memory: 400Mi
            securityContext: &securityContext
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: false
              # capabilities: { drop: ["ALL"] }
        pod: &pod
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            runAsNonRoot: false
            fsGroup: 0
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [44, 105]

      rabbitmq:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/rabbitmq
              tag: 4-alpine
            envFrom: &envFrom
              - secretRef:
                  name: kyoo-secret
              - configMapRef:
                  name: kyoo-config
            resources:
              requests:
                cpu: 5m
              limits:
                memory: 300Mi
            securityContext: *securityContext
        pod: *pod

      back:
        annotations:
          reloader.stakater.com/auto: "true"
        strategy: Recreate
        initContainers:
          00-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.6
            env:
              - name: INIT_POSTGRES_HOST
                value: &dbHost "postgres-rw.db.svc.cluster.local"
              - name: INIT_POSTGRES_SUPER_PASS
                value: "${SECRET_PG_PASSWORD}"
              - name: INIT_POSTGRES_USER
                value: &dbUser "kyoo"
              - name: INIT_POSTGRES_PASS
                value: &dbPass "${KYOO_PG_PASSWORD}"
              - name: INIT_POSTGRES_DBNAME
                value: &dbName kyoo
          01-migrations:
            env:
              - name: POSTGRES_SERVER
                value: *dbHost
              - name: POSTGRES_PORT
                value: '5432'
              - name: POSTGRES_DB
                value: *dbName
              - name: POSTGRES_USER
                value: *dbUser
              - name: POSTGRES_PASSWORD
                value: *dbPass
            envFrom:
              - secretRef:
                  name: kyoo-secret
            image:
              repository: ghcr.io/zoriya/kyoo_migrations
              tag: edge@sha256:30900b823c713daa8af913c6a5a675405d2aaad506f8697c56a38e597bc921f8
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_back
              tag: edge@sha256:f17d417a94c2e8a0ca7476faa99909d9a7a42ae481e2c70b1b14a1499ba3f1fc
            env:
              - name: POSTGRES_SERVER
                value: *dbHost
              - name: POSTGRES_PORT
                value: '5432'
              - name: POSTGRES_DB
                value: *dbName
              - name: POSTGRES_USER
                value: *dbUser
              - name: POSTGRES_PASSWORD
                value: *dbPass
              - name: TRANSCODER_URL
                value: http://kyoo-transcoder:7666
            envFrom: *envFrom
            resources:
              requests:
                cpu: 10m
                memory: 1Gi
              limits:
                cpu: 4000m
                memory: 8Gi
            securityContext: *securityContext
        pod: *pod

      front:
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 1
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_front
              tag: edge@sha256:210711c7d6b6d9798a372e5e6e4de9e97363b9ca1e55e93db14dc8cde9f2029f
            envFrom: *envFrom
            resources:
              requests:
                cpu: 5m
                memory: 100Mi
              limits:
                memory: 1Gi
            securityContext: *securityContext
        pod: *pod

      scanner:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: &scannerimage ghcr.io/zoriya/kyoo_scanner
              tag: &scannertag edge@sha256:bf12b4581163f6ea7115da6201aef4ec8a730d3eebe6a24e7b58bd2d46cae71e
            envFrom: *envFrom
            resources:
              requests:
                cpu: 5m
              limits:
                memory: 1Gi

      matcher:
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 1
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: *scannerimage
              tag: *scannertag
            args: ["matcher"]
            envFrom: *envFrom
            resources:
              requests:
                cpu: 5m
              limits:
                memory: 400Mi
            securityContext: *securityContext
        pod: *pod

      autosync:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_autosync
              tag: 4.7.1@sha256:fbba58ddb1a60466c641b5d3673299a4bb0e60d90ed2162eca551d3fcbd62c4b
            envFrom: *envFrom
            resources:
              requests:
                cpu: 5m
              limits:
                memory: 100Mi
            securityContext: *securityContext
        pod: *pod

      transcoder:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_transcoder
              tag: edge@sha256:fbb8260d6df3a7411561c318c01f04b6ca1ae3cf2a9b4a43272e5743eb98366c
            envFrom: *envFrom
            env:
              - name: POSTGRES_SERVER
                value: *dbHost
              - name: POSTGRES_PORT
                value: '5432'
              - name: POSTGRES_DB
                value: *dbName
              - name: POSTGRES_USER
                value: *dbUser
              - name: POSTGRES_PASSWORD
                value: *dbPass
            resources:
              requests:
                cpu: 10m
                memory: 500Mi
              limits:
                memory: 8Gi
            securityContext: *securityContext
        pod:
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            runAsNonRoot: false
            fsGroup: 0
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [44, 105]

    service:
      back:
        controller: back
        ports:
          http:
            port: 5000
      front:
        controller: front
        ports:
          http:
            port: 8901
      rabbitmq:
        controller: rabbitmq
        ports:
          http:
            port: 5672
      meilisearch:
        controller: meilisearch
        ports:
          http:
            port: *searchport
      transcoder:
        controller: transcoder
        ports:
          http:
            port: 7666

    ingress:
      main:
        className: private
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/name: Kyoo
          nginx.ingress.kubernetes.io/configuration-snippet: |
            rewrite /api/(.*) /$1 break;
          nignx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
        hosts:
          - host: &host kyoo.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: front
                  port: http
              - path: /api
                pathType: Prefix
                service:
                  identifier: back
                  port: http
        tls: [hosts: [*host]]
    persistence:
      kyoo:
        size: 5Gi
        accessMode: ReadWriteOnce
        storageClass: iscsi
        retain: true
        nameOverride: kyoo
        advancedMounts:
          back:
            app:
              - path: /metadata
      search:
        size: 5Gi
        accessMode: ReadWriteOnce
        storageClass: iscsi
        retain: true
        advancedMounts:
          meilisearch:
            app:
              - path: /meili_data
      transcoder-metadata:
        size: 5Gi
        accessMode: ReadWriteOnce
        storageClass: iscsi
        retain: true
        advancedMounts:
          transcoder:
            app:
              - path: /metadata
      cache:
        type: emptyDir
        advancedMounts:
          transcoder:
            app:
              - path: /cache
      media:
        enabled: true
        existingClaim: media
        globalMounts:
          - path: /media
