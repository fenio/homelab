apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitor
spec:
  chart:
    spec:
      chart: grafana
      version: 7.2.4
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  dependsOn:
    - name: ingress-nginx
      namespace: network
    - name: cloudnative-pg
      namespace: database
  interval: 30m
  values:
    annotations:
      secret.reloader.stakater.com/reload: &secret grafana-secret
    extraInitContainers:
      - name: init-db
        image: ghcr.io/onedr0p/postgres-init:16.1
        env:
          - name: INIT_POSTGRES_HOST
            value: &dbHost "postgres-rw.database.svc.cluster.local"
          - name: INIT_POSTGRES_SUPER_PASS
            value: "${SECRET_PG_PASSWORD}"
          - name: INIT_POSTGRES_USER
            value:  &dbUser "grafana"
          - name: INIT_POSTGRES_PASS
            value: &dbPass "${GRAFANA_PG_PASSWORD}"
          - name: INIT_POSTGRES_DBNAME
            value: &dbname grafana
    env:
      GF_DATABASE_NAME: *dbname
      GF_DATABASE_HOST: *dbHost
      GF_DATABASE_USER: *dbUser
      GF_DATABASE_PASSWORD: *dbPass
      GF_DATABASE_SSL_MODE: disable
      GF_DATABASE_TYPE: postgres
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
    rbac:
      pspEnabled: false
    persistence:
      enabled: false
    testFramework:
      enabled: false
    imageRenderer:
      enabled: false
    serviceMonitor:
      enabled: true
    serviceAccount:
      autoMount: true
    ingress:
      ingressClassName: private
      enabled: true
      annotations:
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Infrastructure
        gethomepage.dev/name: Grafana
        gethomepage.dev/icon: grafana.svg
        kubernetes.io/ingress.class: "private"
        cert-manager.io/cluster-issuer: "letsencrypt-production"
      hosts:
        - &host "g.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - "g.${SECRET_DOMAIN}"  # replace with your actual domain
          secretName: "g-${SECRET_DOMAIN}-tls"
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth.basic:
        enabled: true
      log:
        mode: console
      news:
        news_feed_enabled: false
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
    sidecar:
      datasources:
        enabled: true
        searchNamespace: ALL
        initDatasources: true
        labelValue: ""
      dashboards:
        enabled: true
        labelValue: ""
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        searchNamespace: ALL
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
    datasources:
      datasources.yaml:
        apiVersion: 1
        # list of datasources that should be deleted from the database
        deleteDatasources:
          - name: Loki
            orgId: 1
          - name: Alertmanager
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://vmsingle-vm.monitor.svc.cluster.local:8429
            isDefault: true
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://vm-alertmanager.monitor.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            disableDeletion: false
            editable: true
            folder: ""
            options:
              path: /var/lib/grafana/dashboards/default
            orgId: 1
            type: file
          - name: "storage"
            disableDeletion: false
            editable: true
            folder: "Postgres"
            options:
              path: /var/lib/grafana/dashboards/database
            orgId: 1
            type: file
          - name: "flux"
            orgId: 1
            folder: "Flux"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: "kubernetes"
            orgId: 1
            folder: "Kubernetes"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: "networking"
            org_id: 1
            folder: "Networking"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/networking
          - name: "system"
            orgId: 1
            folder: "System"
            type: file
            disableDeletion: false
            editable: true
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/system
          - name: "victoria-metrics"
            orgId: 1
            folder: "VicoriaMetrics"
            type: file
            disableDeletion: false
            editable: true
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/vm
    dashboards:
      flux:
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-external:
          gnetId: 16714
          revision: 1
          datasource: Prometheus
      kubernetes:
        api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 14
          datasource: Prometheus
        coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 16
          datasource: Prometheus
        global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 31
          datasource: Prometheus
        namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 27
          datasource: Prometheus
        nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 19
          datasource: Prometheus
        pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gNetId: 15760
          revision: 21
          datasource: Prometheus
        volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
      networking:
        cilium-agent:
          gnetId: 16611
          revision: 1
          datasource: Prometheus
        cilium-operator:
          gnetId: 16612
          revision: 1
          datasource: Prometheus
        hubble:
          gnetId: 16613
          revision: 1
          datasource: Prometheus
        ingress-nginx-external:
          gnetId: 14314
          revision: 2
          datasource: Prometheus
        ingress-nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        ingress-nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus
        external-dns:
          # renovate: depName="External-DNS"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
      storage:
        cnpg-dashboard:
          url: https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/v1.22.0/docs/src/samples/monitoring/grafana-dashboard.json
          datasource: Prometheus
      system:
        node-exporter:
          # renovate: depName="Node Exporter"
          gnetId: 11074
          revision: 9
          datasource: Prometheus
          # renovate: depName="Node Exporter Full"
        node-exporter-full:
          gnetId: 1860
          revision: 31
          datasource: Prometheus
      victoria-metrics:
        single:
          gnetId: 10229
          revision: 31
          datasource: Prometheus
        vmagent:
          gnetId: 12683
          revision: 14
          datasource: Prometheus
