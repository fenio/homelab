apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vm
  namespace: monitor
spec:
  interval: 15m
  chart:
    spec:
      chart: victoria-metrics-k8s-stack
      version: 0.19.0
      sourceRef:
        kind: HelmRepository
        name: victoriametrics
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    victoria-metrics-operator:
      nameOverride: operator
      env:
        - name: VM_VMSINGLEDEFAULT_CONFIGRELOADERCPU
          value: 10m
        - name: VM_VMSINGLEDEFAULT_CONFIGRELOADERMEMORY
          value: 100Mi
        - name: VM_VMALERTDEFAULT_CONFIGRELOADERCPU
          value: 10m
        - name: VM_VMALERTDEFAULT_CONFIGRELOADERMEMORY
          value: 100Mi
        - name: VM_VMAGENTDEFAULT_CONFIGRELOADERCPU
          value: 30m
        - name: VM_VMAGENTDEFAULT_CONFIGRELOADERMEMORY
          value: 100Mi
        - name: VM_VMALERTMANAGER_CONFIGRELOADERCPU
          value: 10m
        - name: VM_VMALERTMANAGER_CONFIGRELOADERMEMORY
          value: 100Mi
      resources:
        requests:
          cpu: 20m
          memory: 100Mi
          ephemeral-storage: 1Gi
        limits:
          memory: 100Mi
          ephemeral-storage: 2Gi
      operator:
        disable_prometheus_converter: false
    fullnameOverride: vm
    grafana:
      enabled: false
    coreDns:
      spec:
        jobLabel: "jobLabel"
    kubeControllerManager:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeScheduler:
      enabled: false
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
          ephemeral-storage: 1Gi
        limits:
          memory: 100Mi
          ephemeral-storage: 2Gi
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      image:
        pullPolicy: Always
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
          ephemeral-storage: 1Gi
        limits:
          memory: 200Mi
          ephemeral-storage: 2Gi
    vmsingle:
      spec:
        resources:
          requests:
            cpu: 400m
            memory: 1.2G
            ephemeral-storage: 1Gi
          limits:
            cpu: null
            memory: 1.4G
            ephemeral-storage: 2Gi
    vmalert:
      spec:
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
            ephemeral-storage: 1Gi
          limits:
            memory: 100Mi
            ephemeral-storage: 2Gi
    vmagent:
      spec:
        podMetadata:
          labels:
            app.kubernetes.io/name=prometheus
        externalLabels:
          cluster: lab
        resources:
          requests:
            cpu: 200m
            memory: 200Mi
            ephemeral-storage: 1Gi
          limits:
            memory: 300Mi
            ephemeral-storage: 2Gi
      ingress:
        ingressClassName: private
        enabled: true
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Infrastructure
          gethomepage.dev/name: VM Agent
          gethomepage.dev/icon: si-victoriametrics
          kubernetes.io/ingress.class: "nginx"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - &host agent.${SECRET_DOMAIN}
        tls: [hosts: [*host]]
    alertmanager:
      spec:
        resources:
          requests:
            cpu: 10m
            memory: 100Mi
            ephemeral-storage: 1Gi
          limits:
            cpu: null
            memory: 150Mi
            ephemeral-storage: 2Gi
      ingress:
        ingressClassName: private
        enabled: true
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Infrastructure
          gethomepage.dev/name: VM AlertManager
          gethomepage.dev/icon: si-victoriametrics
          kubernetes.io/ingress.class: "nginx"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - &host am.${SECRET_DOMAIN}
        tls: [hosts: [*host]]
