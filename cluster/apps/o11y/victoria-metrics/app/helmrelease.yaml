apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: vm
  namespace: o11y
spec:
  interval: 15m
  chart:
    spec:
      chart: victoria-metrics-k8s-stack
      version: 0.23.0
      sourceRef:
        kind: HelmRepository
        name: victoriametrics
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    victoria-metrics-operator:
      nameOverride: operator
      env:
        - name: VM_VMSINGLEDEFAULT_CONFIGRELOADERCPU
          value: 100m
        - name: VM_VMSINGLEDEFAULT_CONFIGRELOADERMEMORY
          value: 100Mi
        - name: VM_VMALERTDEFAULT_CONFIGRELOADERCPU
          value: 100m
        - name: VM_VMALERTDEFAULT_CONFIGRELOADERMEMORY
          value: 100Mi
        - name: VM_VMAGENTDEFAULT_CONFIGRELOADERCPU
          value: 100m
        - name: VM_VMAGENTDEFAULT_CONFIGRELOADERMEMORY
          value: 100Mi
        - name: VM_VMALERTMANAGER_CONFIGRELOADERCPU
          value: 100m
        - name: VM_VMALERTMANAGER_CONFIGRELOADERMEMORY
          value: 100Mi
      resources:
        requests:
          cpu: 20m
          memory: 100Mi
          ephemeral-storage: 1Gi
        limits:
          memory: 100Mi
          ephemeral-storage: 2Gi
      operator:
        disable_prometheus_converter: false
    fullnameOverride: vm
    grafana:
      enabled: false
    coreDns:
      spec:
        jobLabel: "jobLabel"
    kubeControllerManager:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeScheduler:
      enabled: false
    kube-state-metrics:
      vmServiceScrape:
        spec:
          endpoints:
          - port: http
            honorLabels: true
            metricRelabelConfigs:
              - action: labeldrop
                regex: (container_id|image_id)
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - pods=[*]
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
          ephemeral-storage: 1Gi
        limits:
          memory: 100Mi
          ephemeral-storage: 2Gi
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      image:
        pullPolicy: Always
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
          ephemeral-storage: 1Gi
        limits:
          memory: 150Mi
          ephemeral-storage: 2Gi
    vmsingle:
      spec:
        extraArgs:
          maxLabelsPerTimeseries: "80"
        image:
          pullPolicy: Always
        resources:
          requests:
            cpu: 400m
            memory: 1.5G
            ephemeral-storage: 1Gi
          limits:
            memory: 1.8G
            ephemeral-storage: 2Gi
      ingress:
        ingressClassName: private
        enabled: true
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Infrastructure
          gethomepage.dev/name: VM 
          gethomepage.dev/icon: si-victoriametrics
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - &host vm.${SECRET_DOMAIN}
        tls: [hosts: [*host]]
    vmalert:
      spec:
        replicaCount: 1
        image:
          pullPolicy: Always
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
            ephemeral-storage: 1Gi
          limits:
            memory: 100Mi
            ephemeral-storage: 2Gi
    vmagent:
      spec:
        replicaCount: 1
        image:
          pullPolicy: Always
        externalLabels:
          cluster: lab
        extraArgs:
          promscrape.dropOriginalLabels: "false"
          promscrape.maxDroppedTargets: "12000"
        resources:
          requests:
            cpu: 200m
            memory: 200Mi
            ephemeral-storage: 1Gi
          limits:
            memory: 300Mi
            ephemeral-storage: 2Gi
      ingress:
        ingressClassName: private
        enabled: true
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Infrastructure
          gethomepage.dev/name: VM Agent
          gethomepage.dev/icon: si-victoriametrics
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - &host agent.${SECRET_DOMAIN}
        tls: [hosts: [*host]]
    alertmanager:
      spec:
        image:
          pullPolicy: Always
        resources:
          requests:
            cpu: 10m
            memory: 100Mi
            ephemeral-storage: 1Gi
          limits:
            memory: 150Mi
            ephemeral-storage: 2Gi
      config:
        global:
          resolve_timeout: 5m
        route:
          group_by: ["alertname", "job"]
          group_wait: 1m
          group_interval: 10m
          repeat_interval: 12h
          receiver: "telegram"
          routes:
            - receiver: "null"
              matchers:
                - alertname =~ "InfoInhibitor"
              continue: false
            - receiver: "telegram"
        receivers:
          - name: "null"
          - name: "telegram"
            telegram_configs:
              - parse_mode: "HTML"
                disable_notifications: false
                bot_token: ${TELEGRAM_TOKEN}
                chat_id: ${TELEGRAM_CHATID}
                send_resolved: true
                api_url: https://api.telegram.org         
      ingress:
        ingressClassName: private
        enabled: true
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Infrastructure
          gethomepage.dev/name: VM AlertManager
          gethomepage.dev/icon: si-victoriametrics
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - &host am.${SECRET_DOMAIN}
        tls: [hosts: [*host]]
